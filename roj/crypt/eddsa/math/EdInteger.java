package roj.crypt.eddsa.math;

import roj.text.TextUtil;

import java.util.Arrays;

import static roj.crypt.eddsa.math.EdPoint.NUMS;

public final class EdInteger {
	public static final EdInteger ZERO = fromBytes(new byte[32]);
	public static final EdInteger ONE;
	static {
		byte[] b = new byte[32];
		b[0] = 1;
		ONE = fromBytes(b);
	}

	final int[] t;
	transient boolean mutable;

	public EdInteger(int[] t) {
		if (t.length != 10) throw new IllegalArgumentException("Invalid radix-2^51 representation");
		this.t = t;
	}

	static int load_3(byte[] in, int offset) {
		int result = in[offset++] & 0xFF;
		result |= (in[offset++] & 0xFF) << 8;
		return result | (in[offset] & 0xFF) << 16;
	}

	static long load_4(byte[] in, int offset) {
		int result = in[offset++] & 0xFF;
		result |= (in[offset++] & 0xFF) << 8;
		result |= (in[offset++] & 0xFF) << 16;
		return (result | in[offset] << 24) & 0xFFFFFFFFL;
	}

	public static EdInteger fromBytes(byte[] in) {
		long h0 = load_4(in, 0);
		long h1 = load_3(in, 4) << 6;
		long h2 = load_3(in, 7) << 5;
		long h3 = load_3(in, 10) << 3;
		long h4 = load_3(in, 13) << 2;
		long h5 = load_4(in, 16);
		long h6 = load_3(in, 20) << 7;
		long h7 = load_3(in, 23) << 5;
		long h8 = load_3(in, 26) << 4;
		long h9 = (load_3(in, 29) & 0x7FFFFF) << 2;
		long carry9 = h9 + 0x1000000L >> 25;
		h0 += carry9 * 19L;
		h9 -= carry9 << 25;
		long carry1 = h1 + 0x1000000L >> 25;
		h2 += carry1;
		h1 -= carry1 << 25;
		long carry3 = h3 + 0x1000000L >> 25;
		h4 += carry3;
		h3 -= carry3 << 25;
		long carry5 = h5 + 0x1000000L >> 25;
		h6 += carry5;
		h5 -= carry5 << 25;
		long carry7 = h7 + 0x1000000L >> 25;
		h8 += carry7;
		h7 -= carry7 << 25;
		long carry0 = h0 + 0x2000000L >> 26;
		h1 += carry0;
		h0 -= carry0 << 26;
		long carry2 = h2 + 0x2000000L >> 26;
		h3 += carry2;
		h2 -= carry2 << 26;
		long carry4 = h4 + 0x2000000L >> 26;
		long carry6 = h6 + 0x2000000L >> 26;
		long carry8 = h8 + 0x2000000L >> 26;

		int[] h = new int[] {(int) h0, (int) h1, (int) h2, (int) h3, (int) (h4 - (carry4 << 26)), (int) (h5 + carry4), (int) (h6 - (carry6 << 26)), (int) (h7 + carry6), (int) (h8 - (carry8 << 26)), (int) (h9 + carry8)};
		return new EdInteger(h);
	}

	public byte[] toByteArray() {
		int[] h = t;
		int h0 = h[0];
		int h1 = h[1];
		int h2 = h[2];
		int h3 = h[3];
		int h4 = h[4];
		int h5 = h[5];
		int h6 = h[6];
		int h7 = h[7];
		int h8 = h[8];
		int h9 = h[9];
		int q = 19 * h9 + 0x1000000 >> 25;
		q = h0 + q >> 26;
		q = h1 + q >> 25;
		q = h2 + q >> 26;
		q = h3 + q >> 25;
		q = h4 + q >> 26;
		q = h5 + q >> 25;
		q = h6 + q >> 26;
		q = h7 + q >> 25;
		q = h8 + q >> 26;
		q = h9 + q >> 25;
		int carry0 = (h0 += 19 * q) >> 26;
		h0 -= carry0 << 26;
		int carry1 = (h1 += carry0) >> 25;
		h1 -= carry1 << 25;
		int carry2 = (h2 += carry1) >> 26;
		h2 -= carry2 << 26;
		int carry3 = (h3 += carry2) >> 25;
		h3 -= carry3 << 25;
		int carry4 = (h4 += carry3) >> 26;
		h4 -= carry4 << 26;
		int carry5 = (h5 += carry4) >> 25;
		h5 -= carry5 << 25;
		int carry6 = (h6 += carry5) >> 26;
		int carry7 = (h7 += carry6) >> 25;
		int carry8 = (h8 += carry7) >> 26;
		int carry9 = (h9 += carry8) >> 25;
		return new byte[] {(byte) h0, (byte) (h0 >> 8), (byte) (h0 >> 16), (byte) (h0 >> 24 | h1 << 2), (byte) (h1 >> 6), (byte) (h1 >> 14), (byte) (h1 >> 22 | h2 << 3), (byte) (h2 >> 5), (byte) (h2 >> 13), (byte) (h2 >> 21 | h3 << 5), (byte) (h3 >> 3), (byte) (h3 >> 11), (byte) (h3 >> 19 | h4 << 6), (byte) (h4 >> 2), (byte) (h4 >> 10), (byte) (h4 >> 18), (byte) h5, (byte) (h5 >> 8),
						   (byte) (h5 >> 16), (byte) (h5 >> 24 | (h6 -= carry6 << 26) << 1), (byte) (h6 >> 7), (byte) (h6 >> 15), (byte) (h6 >> 23 | (h7 -= carry7 << 25) << 3), (byte) (h7 >> 5), (byte) (h7 >> 13), (byte) (h7 >> 21 | (h8 -= carry8 << 26) << 4), (byte) (h8 >> 4), (byte) (h8 >> 12), (byte) (h8 >> 20 | (h9 -= carry9 << 25) << 6), (byte) (h9 >> 2), (byte) (h9 >> 10),
						   (byte) (h9 >> 18)};
	}

	public static byte[] scalar_mod_inline(byte[] s) {
		long s0 = 0x1FFFFF & load_3(s, 0);
		long s1 = 0x1FFFFFL & load_4(s, 2) >> 5;
		long s2 = 0x1FFFFF & load_3(s, 5) >> 2;
		long s3 = 0x1FFFFFL & load_4(s, 7) >> 7;
		long s4 = 0x1FFFFFL & load_4(s, 10) >> 4;
		long s5 = 0x1FFFFF & load_3(s, 13) >> 1;
		long s6 = 0x1FFFFFL & load_4(s, 15) >> 6;
		long s7 = 0x1FFFFF & load_3(s, 18) >> 3;
		long s8 = 0x1FFFFF & load_3(s, 21);
		long s9 = 0x1FFFFFL & load_4(s, 23) >> 5;
		long s10 = 0x1FFFFF & load_3(s, 26) >> 2;
		long s11 = 0x1FFFFFL & load_4(s, 28) >> 7;
		long s12 = 0x1FFFFFL & load_4(s, 31) >> 4;
		long s13 = 0x1FFFFF & load_3(s, 34) >> 1;
		long s14 = 0x1FFFFFL & load_4(s, 36) >> 6;
		long s15 = 0x1FFFFF & load_3(s, 39) >> 3;
		long s16 = 0x1FFFFF & load_3(s, 42);
		long s17 = 0x1FFFFFL & load_4(s, 44) >> 5;
		long s18 = 0x1FFFFF & load_3(s, 47) >> 2;
		long s19 = 0x1FFFFFL & load_4(s, 49) >> 7;
		long s20 = 0x1FFFFFL & load_4(s, 52) >> 4;
		long s21 = 0x1FFFFF & load_3(s, 55) >> 1;
		long s22 = 0x1FFFFFL & load_4(s, 57) >> 6;
		long s23 = load_4(s, 60) >> 3;
		s11 += s23 * 666643L;
		s12 += s23 * 470296L;
		s13 += s23 * 654183L;
		s14 -= s23 * 997805L;
		s15 += s23 * 136657L;
		s16 -= s23 * 683901L;
		s10 += s22 * 666643L;
		s11 += s22 * 470296L;
		s12 += s22 * 654183L;
		s13 -= s22 * 997805L;
		s14 += s22 * 136657L;
		s15 -= s22 * 683901L;
		s9 += s21 * 666643L;
		s10 += s21 * 470296L;
		s11 += s21 * 654183L;
		s12 -= s21 * 997805L;
		s13 += s21 * 136657L;
		s14 -= s21 * 683901L;
		s8 += s20 * 666643L;
		s9 += s20 * 470296L;
		s10 += s20 * 654183L;
		s11 -= s20 * 997805L;
		s12 += s20 * 136657L;
		s13 -= s20 * 683901L;
		s7 += s19 * 666643L;
		s8 += s19 * 470296L;
		s9 += s19 * 654183L;
		s10 -= s19 * 997805L;
		s11 += s19 * 136657L;
		s12 -= s19 * 683901L;
		s6 += s18 * 666643L;
		s7 += s18 * 470296L;
		s8 += s18 * 654183L;
		s9 -= s18 * 997805L;
		s10 += s18 * 136657L;
		s11 -= s18 * 683901L;
		long carry6 = s6 + 0x100000L >> 21;
		s7 += carry6;
		s6 -= carry6 << 21;
		long carry8 = s8 + 0x100000L >> 21;
		s9 += carry8;
		s8 -= carry8 << 21;
		long carry10 = s10 + 0x100000L >> 21;
		s11 += carry10;
		s10 -= carry10 << 21;
		long carry12 = s12 + 0x100000L >> 21;
		s13 += carry12;
		s12 -= carry12 << 21;
		long carry14 = s14 + 0x100000L >> 21;
		s15 += carry14;
		s14 -= carry14 << 21;
		long carry16 = s16 + 0x100000L >> 21;
		s17 += carry16;
		s16 -= carry16 << 21;
		long carry7 = s7 + 0x100000L >> 21;
		s8 += carry7;
		s7 -= carry7 << 21;
		long carry9 = s9 + 0x100000L >> 21;
		s10 += carry9;
		s9 -= carry9 << 21;
		long carry11 = s11 + 0x100000L >> 21;
		s12 += carry11;
		s11 -= carry11 << 21;
		long carry13 = s13 + 0x100000L >> 21;
		s14 += carry13;
		s13 -= carry13 << 21;
		long carry15 = s15 + 0x100000L >> 21;
		s16 += carry15;
		s15 -= carry15 << 21;
		s5 += s17 * 666643L;
		s6 += s17 * 470296L;
		s7 += s17 * 654183L;
		s8 -= s17 * 997805L;
		s9 += s17 * 136657L;
		s10 -= s17 * 683901L;
		s4 += s16 * 666643L;
		s5 += s16 * 470296L;
		s6 += s16 * 654183L;
		s7 -= s16 * 997805L;
		s8 += s16 * 136657L;
		s9 -= s16 * 683901L;
		s3 += s15 * 666643L;
		s4 += s15 * 470296L;
		s5 += s15 * 654183L;
		s6 -= s15 * 997805L;
		s7 += s15 * 136657L;
		s8 -= s15 * 683901L;
		s2 += s14 * 666643L;
		s3 += s14 * 470296L;
		s4 += s14 * 654183L;
		s5 -= s14 * 997805L;
		s6 += s14 * 136657L;
		s7 -= s14 * 683901L;
		s1 += s13 * 666643L;
		s2 += s13 * 470296L;
		s3 += s13 * 654183L;
		s4 -= s13 * 997805L;
		s5 += s13 * 136657L;
		s6 -= s13 * 683901L;
		s0 += s12 * 666643L;
		s1 += s12 * 470296L;
		s2 += s12 * 654183L;
		s3 -= s12 * 997805L;
		s4 += s12 * 136657L;
		s5 -= s12 * 683901L;
		long carry0 = s0 + 0x100000L >> 21;
		s1 += carry0;
		s0 -= carry0 << 21;
		long carry2 = s2 + 0x100000L >> 21;
		s3 += carry2;
		s2 -= carry2 << 21;
		long carry4 = s4 + 0x100000L >> 21;
		s5 += carry4;
		s4 -= carry4 << 21;
		carry6 = s6 + 0x100000L >> 21;
		s7 += carry6;
		s6 -= carry6 << 21;
		carry8 = s8 + 0x100000L >> 21;
		s9 += carry8;
		s8 -= carry8 << 21;
		carry10 = s10 + 0x100000L >> 21;
		s11 += carry10;
		s10 -= carry10 << 21;
		long carry1 = s1 + 0x100000L >> 21;
		s2 += carry1;
		s1 -= carry1 << 21;
		long carry3 = s3 + 0x100000L >> 21;
		s4 += carry3;
		s3 -= carry3 << 21;
		long carry5 = s5 + 0x100000L >> 21;
		s6 += carry5;
		s5 -= carry5 << 21;
		carry7 = s7 + 0x100000L >> 21;
		s8 += carry7;
		s7 -= carry7 << 21;
		carry9 = s9 + 0x100000L >> 21;
		s10 += carry9;
		s9 -= carry9 << 21;
		s12 = carry11 = s11 + 0x100000L >> 21;
		s11 -= carry11 << 21;
		s0 += s12 * 666643L;
		s1 += s12 * 470296L;
		s2 += s12 * 654183L;
		s3 -= s12 * 997805L;
		s4 += s12 * 136657L;
		s5 -= s12 * 683901L;
		carry0 = s0 >> 21;
		s0 -= carry0 << 21;
		carry1 = (s1 += carry0) >> 21;
		s1 -= carry1 << 21;
		carry2 = (s2 += carry1) >> 21;
		s2 -= carry2 << 21;
		carry3 = (s3 += carry2) >> 21;
		s3 -= carry3 << 21;
		carry4 = (s4 += carry3) >> 21;
		s4 -= carry4 << 21;
		carry5 = (s5 += carry4) >> 21;
		s5 -= carry5 << 21;
		carry6 = (s6 += carry5) >> 21;
		s6 -= carry6 << 21;
		carry7 = (s7 += carry6) >> 21;
		s7 -= carry7 << 21;
		carry8 = (s8 += carry7) >> 21;
		s8 -= carry8 << 21;
		carry9 = (s9 += carry8) >> 21;
		s9 -= carry9 << 21;
		carry10 = (s10 += carry9) >> 21;
		s10 -= carry10 << 21;
		s12 = carry11 = (s11 += carry10) >> 21;
		s11 -= carry11 << 21;
		s0 += s12 * 666643L;
		s1 += s12 * 470296L;
		s2 += s12 * 654183L;
		s3 -= s12 * 997805L;
		s4 += s12 * 136657L;
		s5 -= s12 * 683901L;
		carry0 = s0 >> 21;
		s0 -= carry0 << 21;
		carry1 = (s1 += carry0) >> 21;
		s1 -= carry1 << 21;
		carry2 = (s2 += carry1) >> 21;
		s2 -= carry2 << 21;
		carry3 = (s3 += carry2) >> 21;
		s3 -= carry3 << 21;
		carry4 = (s4 += carry3) >> 21;
		s4 -= carry4 << 21;
		carry5 = (s5 += carry4) >> 21;
		s5 -= carry5 << 21;
		carry6 = (s6 += carry5) >> 21;
		s6 -= carry6 << 21;
		carry7 = (s7 += carry6) >> 21;
		carry8 = (s8 += carry7) >> 21;
		carry9 = (s9 += carry8) >> 21;
		carry10 = (s10 += carry9) >> 21;

		s[ 0] = (byte) s0;
		s[ 1] = (byte) (s0 >> 8);
		s[ 2] = (byte) (s0 >> 16 | s1 << 5);
		s[ 3] = (byte) (s1 >> 3);
		s[ 4] = (byte) (s1 >> 11);
		s[ 5] = (byte) (s1 >> 19 | s2 << 2);
		s[ 6] = (byte) (s2 >> 6);
		s[ 7] = (byte) (s2 >> 14 | s3 << 7);
		s[ 8] = (byte) (s3 >> 1);
		s[ 9] = (byte) (s3 >> 9);
		s[10] = (byte) (s3 >> 17 | s4 << 4);
		s[11] = (byte) (s4 >> 4);
		s[12] = (byte) (s4 >> 12);
		s[13] = (byte) (s4 >> 20 | s5 << 1);
		s[14] = (byte) (s5 >> 7);
		s[15] = (byte) (s5 >> 15 | s6 << 6);
		s[16] = (byte) (s6 >> 2);
		s[17] = (byte) (s6 >> 10);
		s[18] = (byte) (s6 >> 18 | (s7 -= carry7 << 21) << 3);
		s[19] = (byte) (s7 >> 5);
		s[20] = (byte) (s7 >> 13);
		s[21] = (byte) (s8 -= carry8 << 21);
		s[22] = (byte) (s8 >> 8);
		s[23] = (byte) (s8 >> 16 | (s9 -= carry9 << 21) << 5);
		s[24] = (byte) (s9 >> 3);
		s[25] = (byte) (s9 >> 11);
		s[26] = (byte) (s9 >> 19 | (s10 -= carry10 << 21) << 2);
		s[27] = (byte) (s10 >> 6);
		s[28] = (byte) (s10 >> 14 | (s11 += carry10) << 7);
		s[29] =  (byte) (s11 >> 1);
		s[30] = (byte) (s11 >> 9);
		s[31] = (byte) (s11 >> 17);
		return s;
	}
	public static byte[] scalar_mul_add_mod_inline(byte[] op, byte[] mul, byte[] add) {
		long a0 = 0x1FFFFF & load_3(op, 0);
		long a1 = 0x1FFFFFL & load_4(op, 2) >> 5;
		long a2 = 0x1FFFFF & load_3(op, 5) >> 2;
		long a3 = 0x1FFFFFL & load_4(op, 7) >> 7;
		long a4 = 0x1FFFFFL & load_4(op, 10) >> 4;
		long a5 = 0x1FFFFF & load_3(op, 13) >> 1;
		long a6 = 0x1FFFFFL & load_4(op, 15) >> 6;
		long a7 = 0x1FFFFF & load_3(op, 18) >> 3;
		long a8 = 0x1FFFFF & load_3(op, 21);
		long a9 = 0x1FFFFFL & load_4(op, 23) >> 5;
		long a10 = 0x1FFFFF & load_3(op, 26) >> 2;
		long a11 = load_4(op, 28) >> 7;
		long b0 = 0x1FFFFF & load_3(mul, 0);
		long b1 = 0x1FFFFFL & load_4(mul, 2) >> 5;
		long b2 = 0x1FFFFF & load_3(mul, 5) >> 2;
		long b3 = 0x1FFFFFL & load_4(mul, 7) >> 7;
		long b4 = 0x1FFFFFL & load_4(mul, 10) >> 4;
		long b5 = 0x1FFFFF & load_3(mul, 13) >> 1;
		long b6 = 0x1FFFFFL & load_4(mul, 15) >> 6;
		long b7 = 0x1FFFFF & load_3(mul, 18) >> 3;
		long b8 = 0x1FFFFF & load_3(mul, 21);
		long b9 = 0x1FFFFFL & load_4(mul, 23) >> 5;
		long b10 = 0x1FFFFF & load_3(mul, 26) >> 2;
		long b11 = load_4(mul, 28) >> 7;
		long c0 = 0x1FFFFF & load_3(add, 0);
		long c1 = 0x1FFFFFL & load_4(add, 2) >> 5;
		long c2 = 0x1FFFFF & load_3(add, 5) >> 2;
		long c3 = 0x1FFFFFL & load_4(add, 7) >> 7;
		long c4 = 0x1FFFFFL & load_4(add, 10) >> 4;
		long c5 = 0x1FFFFF & load_3(add, 13) >> 1;
		long c6 = 0x1FFFFFL & load_4(add, 15) >> 6;
		long c7 = 0x1FFFFF & load_3(add, 18) >> 3;
		long c8 = 0x1FFFFF & load_3(add, 21);
		long c9 = 0x1FFFFFL & load_4(add, 23) >> 5;
		long c10 = 0x1FFFFF & load_3(add, 26) >> 2;
		long c11 = load_4(add, 28) >> 7;
		long s0 = c0 + a0 * b0;
		long s1 = c1 + a0 * b1 + a1 * b0;
		long s2 = c2 + a0 * b2 + a1 * b1 + a2 * b0;
		long s3 = c3 + a0 * b3 + a1 * b2 + a2 * b1 + a3 * b0;
		long s4 = c4 + a0 * b4 + a1 * b3 + a2 * b2 + a3 * b1 + a4 * b0;
		long s5 = c5 + a0 * b5 + a1 * b4 + a2 * b3 + a3 * b2 + a4 * b1 + a5 * b0;
		long s6 = c6 + a0 * b6 + a1 * b5 + a2 * b4 + a3 * b3 + a4 * b2 + a5 * b1 + a6 * b0;
		long s7 = c7 + a0 * b7 + a1 * b6 + a2 * b5 + a3 * b4 + a4 * b3 + a5 * b2 + a6 * b1 + a7 * b0;
		long s8 = c8 + a0 * b8 + a1 * b7 + a2 * b6 + a3 * b5 + a4 * b4 + a5 * b3 + a6 * b2 + a7 * b1 + a8 * b0;
		long s9 = c9 + a0 * b9 + a1 * b8 + a2 * b7 + a3 * b6 + a4 * b5 + a5 * b4 + a6 * b3 + a7 * b2 + a8 * b1 + a9 * b0;
		long s10 = c10 + a0 * b10 + a1 * b9 + a2 * b8 + a3 * b7 + a4 * b6 + a5 * b5 + a6 * b4 + a7 * b3 + a8 * b2 + a9 * b1 + a10 * b0;
		long s11 = c11 + a0 * b11 + a1 * b10 + a2 * b9 + a3 * b8 + a4 * b7 + a5 * b6 + a6 * b5 + a7 * b4 + a8 * b3 + a9 * b2 + a10 * b1 + a11 * b0;
		long s12 = a1 * b11 + a2 * b10 + a3 * b9 + a4 * b8 + a5 * b7 + a6 * b6 + a7 * b5 + a8 * b4 + a9 * b3 + a10 * b2 + a11 * b1;
		long s13 = a2 * b11 + a3 * b10 + a4 * b9 + a5 * b8 + a6 * b7 + a7 * b6 + a8 * b5 + a9 * b4 + a10 * b3 + a11 * b2;
		long s14 = a3 * b11 + a4 * b10 + a5 * b9 + a6 * b8 + a7 * b7 + a8 * b6 + a9 * b5 + a10 * b4 + a11 * b3;
		long s15 = a4 * b11 + a5 * b10 + a6 * b9 + a7 * b8 + a8 * b7 + a9 * b6 + a10 * b5 + a11 * b4;
		long s16 = a5 * b11 + a6 * b10 + a7 * b9 + a8 * b8 + a9 * b7 + a10 * b6 + a11 * b5;
		long s17 = a6 * b11 + a7 * b10 + a8 * b9 + a9 * b8 + a10 * b7 + a11 * b6;
		long s18 = a7 * b11 + a8 * b10 + a9 * b9 + a10 * b8 + a11 * b7;
		long s19 = a8 * b11 + a9 * b10 + a10 * b9 + a11 * b8;
		long s20 = a9 * b11 + a10 * b10 + a11 * b9;
		long s21 = a10 * b11 + a11 * b10;
		long s22 = a11 * b11;
		long carry0 = s0 + 0x100000L >> 21;
		s1 += carry0;
		s0 -= carry0 << 21;
		long carry2 = s2 + 0x100000L >> 21;
		s3 += carry2;
		s2 -= carry2 << 21;
		long carry4 = s4 + 0x100000L >> 21;
		s5 += carry4;
		s4 -= carry4 << 21;
		long carry6 = s6 + 0x100000L >> 21;
		s7 += carry6;
		s6 -= carry6 << 21;
		long carry8 = s8 + 0x100000L >> 21;
		s9 += carry8;
		s8 -= carry8 << 21;
		long carry10 = s10 + 0x100000L >> 21;
		s11 += carry10;
		s10 -= carry10 << 21;
		long carry12 = s12 + 0x100000L >> 21;
		s13 += carry12;
		s12 -= carry12 << 21;
		long carry14 = s14 + 0x100000L >> 21;
		s15 += carry14;
		s14 -= carry14 << 21;
		long carry16 = s16 + 0x100000L >> 21;
		s17 += carry16;
		s16 -= carry16 << 21;
		long carry18 = s18 + 0x100000L >> 21;
		s19 += carry18;
		s18 -= carry18 << 21;
		long carry20 = s20 + 0x100000L >> 21;
		s21 += carry20;
		s20 -= carry20 << 21;
		long carry22;
		long s23 = carry22 = s22 + 0x100000L >> 21;
		s22 -= carry22 << 21;
		long carry1 = s1 + 0x100000L >> 21;
		s2 += carry1;
		s1 -= carry1 << 21;
		long carry3 = s3 + 0x100000L >> 21;
		s4 += carry3;
		s3 -= carry3 << 21;
		long carry5 = s5 + 0x100000L >> 21;
		s6 += carry5;
		s5 -= carry5 << 21;
		long carry7 = s7 + 0x100000L >> 21;
		s8 += carry7;
		s7 -= carry7 << 21;
		long carry9 = s9 + 0x100000L >> 21;
		s10 += carry9;
		s9 -= carry9 << 21;
		long carry11 = s11 + 0x100000L >> 21;
		s12 += carry11;
		s11 -= carry11 << 21;
		long carry13 = s13 + 0x100000L >> 21;
		s14 += carry13;
		s13 -= carry13 << 21;
		long carry15 = s15 + 0x100000L >> 21;
		s16 += carry15;
		s15 -= carry15 << 21;
		long carry17 = s17 + 0x100000L >> 21;
		s18 += carry17;
		s17 -= carry17 << 21;
		long carry19 = s19 + 0x100000L >> 21;
		s20 += carry19;
		s19 -= carry19 << 21;
		long carry21 = s21 + 0x100000L >> 21;
		s22 += carry21;
		s21 -= carry21 << 21;
		s11 += s23 * 666643L;
		s12 += s23 * 470296L;
		s13 += s23 * 654183L;
		s14 -= s23 * 997805L;
		s15 += s23 * 136657L;
		s16 -= s23 * 683901L;
		s10 += s22 * 666643L;
		s11 += s22 * 470296L;
		s12 += s22 * 654183L;
		s13 -= s22 * 997805L;
		s14 += s22 * 136657L;
		s15 -= s22 * 683901L;
		s9 += s21 * 666643L;
		s10 += s21 * 470296L;
		s11 += s21 * 654183L;
		s12 -= s21 * 997805L;
		s13 += s21 * 136657L;
		s14 -= s21 * 683901L;
		s8 += s20 * 666643L;
		s9 += s20 * 470296L;
		s10 += s20 * 654183L;
		s11 -= s20 * 997805L;
		s12 += s20 * 136657L;
		s13 -= s20 * 683901L;
		s7 += s19 * 666643L;
		s8 += s19 * 470296L;
		s9 += s19 * 654183L;
		s10 -= s19 * 997805L;
		s11 += s19 * 136657L;
		s12 -= s19 * 683901L;
		s6 += s18 * 666643L;
		s7 += s18 * 470296L;
		s8 += s18 * 654183L;
		s9 -= s18 * 997805L;
		s10 += s18 * 136657L;
		s11 -= s18 * 683901L;
		carry6 = s6 + 0x100000L >> 21;
		s7 += carry6;
		s6 -= carry6 << 21;
		carry8 = s8 + 0x100000L >> 21;
		s9 += carry8;
		s8 -= carry8 << 21;
		carry10 = s10 + 0x100000L >> 21;
		s11 += carry10;
		s10 -= carry10 << 21;
		carry12 = s12 + 0x100000L >> 21;
		s13 += carry12;
		s12 -= carry12 << 21;
		carry14 = s14 + 0x100000L >> 21;
		s15 += carry14;
		s14 -= carry14 << 21;
		carry16 = s16 + 0x100000L >> 21;
		s17 += carry16;
		s16 -= carry16 << 21;
		carry7 = s7 + 0x100000L >> 21;
		s8 += carry7;
		s7 -= carry7 << 21;
		carry9 = s9 + 0x100000L >> 21;
		s10 += carry9;
		s9 -= carry9 << 21;
		carry11 = s11 + 0x100000L >> 21;
		s12 += carry11;
		s11 -= carry11 << 21;
		carry13 = s13 + 0x100000L >> 21;
		s14 += carry13;
		s13 -= carry13 << 21;
		carry15 = s15 + 0x100000L >> 21;
		s16 += carry15;
		s15 -= carry15 << 21;
		s5 += s17 * 666643L;
		s6 += s17 * 470296L;
		s7 += s17 * 654183L;
		s8 -= s17 * 997805L;
		s9 += s17 * 136657L;
		s10 -= s17 * 683901L;
		s4 += s16 * 666643L;
		s5 += s16 * 470296L;
		s6 += s16 * 654183L;
		s7 -= s16 * 997805L;
		s8 += s16 * 136657L;
		s9 -= s16 * 683901L;
		s3 += s15 * 666643L;
		s4 += s15 * 470296L;
		s5 += s15 * 654183L;
		s6 -= s15 * 997805L;
		s7 += s15 * 136657L;
		s8 -= s15 * 683901L;
		s2 += s14 * 666643L;
		s3 += s14 * 470296L;
		s4 += s14 * 654183L;
		s5 -= s14 * 997805L;
		s6 += s14 * 136657L;
		s7 -= s14 * 683901L;
		s1 += s13 * 666643L;
		s2 += s13 * 470296L;
		s3 += s13 * 654183L;
		s4 -= s13 * 997805L;
		s5 += s13 * 136657L;
		s6 -= s13 * 683901L;
		s0 += s12 * 666643L;
		s1 += s12 * 470296L;
		s2 += s12 * 654183L;
		s3 -= s12 * 997805L;
		s4 += s12 * 136657L;
		s5 -= s12 * 683901L;
		carry0 = s0 + 0x100000L >> 21;
		s1 += carry0;
		s0 -= carry0 << 21;
		carry2 = s2 + 0x100000L >> 21;
		s3 += carry2;
		s2 -= carry2 << 21;
		carry4 = s4 + 0x100000L >> 21;
		s5 += carry4;
		s4 -= carry4 << 21;
		carry6 = s6 + 0x100000L >> 21;
		s7 += carry6;
		s6 -= carry6 << 21;
		carry8 = s8 + 0x100000L >> 21;
		s9 += carry8;
		s8 -= carry8 << 21;
		carry10 = s10 + 0x100000L >> 21;
		s11 += carry10;
		s10 -= carry10 << 21;
		carry1 = s1 + 0x100000L >> 21;
		s2 += carry1;
		s1 -= carry1 << 21;
		carry3 = s3 + 0x100000L >> 21;
		s4 += carry3;
		s3 -= carry3 << 21;
		carry5 = s5 + 0x100000L >> 21;
		s6 += carry5;
		s5 -= carry5 << 21;
		carry7 = s7 + 0x100000L >> 21;
		s8 += carry7;
		s7 -= carry7 << 21;
		carry9 = s9 + 0x100000L >> 21;
		s10 += carry9;
		s9 -= carry9 << 21;
		s12 = carry11 = s11 + 0x100000L >> 21;
		s11 -= carry11 << 21;
		s0 += s12 * 666643L;
		s1 += s12 * 470296L;
		s2 += s12 * 654183L;
		s3 -= s12 * 997805L;
		s4 += s12 * 136657L;
		s5 -= s12 * 683901L;
		carry0 = s0 >> 21;
		s0 -= carry0 << 21;
		carry1 = (s1 += carry0) >> 21;
		s1 -= carry1 << 21;
		carry2 = (s2 += carry1) >> 21;
		s2 -= carry2 << 21;
		carry3 = (s3 += carry2) >> 21;
		s3 -= carry3 << 21;
		carry4 = (s4 += carry3) >> 21;
		s4 -= carry4 << 21;
		carry5 = (s5 += carry4) >> 21;
		s5 -= carry5 << 21;
		carry6 = (s6 += carry5) >> 21;
		s6 -= carry6 << 21;
		carry7 = (s7 += carry6) >> 21;
		s7 -= carry7 << 21;
		carry8 = (s8 += carry7) >> 21;
		s8 -= carry8 << 21;
		carry9 = (s9 += carry8) >> 21;
		s9 -= carry9 << 21;
		carry10 = (s10 += carry9) >> 21;
		s10 -= carry10 << 21;
		s12 = carry11 = (s11 += carry10) >> 21;
		s11 -= carry11 << 21;
		s0 += s12 * 666643L;
		s1 += s12 * 470296L;
		s2 += s12 * 654183L;
		s3 -= s12 * 997805L;
		s4 += s12 * 136657L;
		s5 -= s12 * 683901L;
		carry0 = s0 >> 21;
		s0 -= carry0 << 21;
		carry1 = (s1 += carry0) >> 21;
		s1 -= carry1 << 21;
		carry2 = (s2 += carry1) >> 21;
		s2 -= carry2 << 21;
		carry3 = (s3 += carry2) >> 21;
		s3 -= carry3 << 21;
		carry4 = (s4 += carry3) >> 21;
		s4 -= carry4 << 21;
		carry5 = (s5 += carry4) >> 21;
		s5 -= carry5 << 21;
		carry6 = (s6 += carry5) >> 21;
		s6 -= carry6 << 21;
		carry7 = (s7 += carry6) >> 21;
		carry8 = (s8 += carry7) >> 21;
		carry9 = (s9 += carry8) >> 21;
		carry10 = (s10 += carry9) >> 21;

		op[ 0] = (byte) s0;
		op[ 1] = (byte) (s0 >> 8);
		op[ 2] = (byte) (s0 >> 16 | s1 << 5);
		op[ 3] = (byte) (s1 >> 3);
		op[ 4] = (byte) (s1 >> 11);
		op[ 5] = (byte) (s1 >> 19 | s2 << 2);
		op[ 6] = (byte) (s2 >> 6);
		op[ 7] = (byte) (s2 >> 14 | s3 << 7);
		op[ 8] = (byte) (s3 >> 1);
		op[ 9] = (byte) (s3 >> 9);
		op[10] = (byte) (s3 >> 17 | s4 << 4);
		op[11] = (byte) (s4 >> 4);
		op[12] = (byte) (s4 >> 12);
		op[13] = (byte) (s4 >> 20 | s5 << 1);
		op[14] = (byte) (s5 >> 7);
		op[15] = (byte) (s5 >> 15 | s6 << 6);
		op[16] = (byte) (s6 >> 2);
		op[17] = (byte) (s6 >> 10);
		op[18] = (byte) (s6 >> 18 | (s7 -= carry7 << 21) << 3);
		op[19] = (byte) (s7 >> 5);
		op[20] = (byte) (s7 >> 13);
		op[21] = (byte) (s8 -= carry8 << 21);
		op[22] = (byte) (s8 >> 8);
		op[23] = (byte) (s8 >> 16 | (s9 -= carry9 << 21) << 5);
		op[24] = (byte) (s9 >> 3);
		op[25] = (byte) (s9 >> 11);
		op[26] = (byte) (s9 >> 19 | (s10 -= carry10 << 21) << 2);
		op[27] = (byte) (s10 >> 6);
		op[28] = (byte) (s10 >> 14 | (s11 += carry10) << 7);
		op[29] =  (byte) (s11 >> 1);
		op[30] = (byte) (s11 >> 9);
		op[31] = (byte) (s11 >> 17);
		return op;
	}

	public boolean isNonZero() { return !equals(ZERO); }
	public boolean isNegative() {
		int[] h = t;
		int h0 = h[0];
		int h9 = h[9];

		int q = 19 * h9 + 0x1000000 >> 25;
		q = h0 + q >> 26;
		q = h[1] + q >> 25;
		q = h[2] + q >> 26;
		q = h[3] + q >> 25;
		q = h[4] + q >> 26;
		q = h[5] + q >> 25;
		q = h[6] + q >> 26;
		q = h[7] + q >> 25;
		q = h[8] + q >> 26;
		q = h9 + q >> 25;

		int carry0 = (h0 += 19 * q) >> 26;
		h0 -= carry0 << 26;

		return (h0 & 1) != 0;
	}

	public EdInteger add1() { return add(ONE); }
	public EdInteger add(EdInteger val) {
		int[] h = mutable ? t : new int[10];
		for (int i = 0; i < 10; ++i) h[i] = t[i] + val.t[i];
		return mutable ? this : new EdInteger(h);
	}

	public EdInteger sub1() { return sub(ONE); }
	public EdInteger sub(EdInteger val) {
		int[] h = mutable ? t : new int[10];
		for (int i = 0; i < 10; ++i) h[i] = t[i] - val.t[i];
		return mutable ? this : new EdInteger(h);
	}

	public EdInteger neg() {
		int[] h = mutable ? t : new int[10];
		for (int i = 0; i < 10; ++i) h[i] = -t[i];
		return mutable ? this : new EdInteger(h);
	}

	public EdInteger div(EdInteger val) { return mul(NUMS.get().a.set(this).invert()); }
	public EdInteger mul(EdInteger val) {
		int[] g = val.t;
		int g1_19 = 19 * g[1];
		int g2_19 = 19 * g[2];
		int g3_19 = 19 * g[3];
		int g4_19 = 19 * g[4];
		int g5_19 = 19 * g[5];
		int g6_19 = 19 * g[6];
		int g7_19 = 19 * g[7];
		int g8_19 = 19 * g[8];
		int g9_19 = 19 * g[9];
		int f1_2 = 2 * this.t[1];
		int f3_2 = 2 * this.t[3];
		int f5_2 = 2 * this.t[5];
		int f7_2 = 2 * this.t[7];
		int f9_2 = 2 * this.t[9];
		long f0g0 = (long)this.t[0] * (long)g[0];
		long f0g1 = (long)this.t[0] * (long)g[1];
		long f0g2 = (long)this.t[0] * (long)g[2];
		long f0g3 = (long)this.t[0] * (long)g[3];
		long f0g4 = (long)this.t[0] * (long)g[4];
		long f0g5 = (long)this.t[0] * (long)g[5];
		long f0g6 = (long)this.t[0] * (long)g[6];
		long f0g7 = (long)this.t[0] * (long)g[7];
		long f0g8 = (long)this.t[0] * (long)g[8];
		long f0g9 = (long)this.t[0] * (long)g[9];
		long f1g0 = (long)this.t[1] * (long)g[0];
		long f1g1_2 = (long)f1_2 * (long)g[1];
		long f1g2 = (long)this.t[1] * (long)g[2];
		long f1g3_2 = (long)f1_2 * (long)g[3];
		long f1g4 = (long)this.t[1] * (long)g[4];
		long f1g5_2 = (long)f1_2 * (long)g[5];
		long f1g6 = (long)this.t[1] * (long)g[6];
		long f1g7_2 = (long)f1_2 * (long)g[7];
		long f1g8 = (long)this.t[1] * (long)g[8];
		long f1g9_38 = (long)f1_2 * (long)g9_19;
		long f2g0 = (long)this.t[2] * (long)g[0];
		long f2g1 = (long)this.t[2] * (long)g[1];
		long f2g2 = (long)this.t[2] * (long)g[2];
		long f2g3 = (long)this.t[2] * (long)g[3];
		long f2g4 = (long)this.t[2] * (long)g[4];
		long f2g5 = (long)this.t[2] * (long)g[5];
		long f2g6 = (long)this.t[2] * (long)g[6];
		long f2g7 = (long)this.t[2] * (long)g[7];
		long f2g8_19 = (long)this.t[2] * (long)g8_19;
		long f2g9_19 = (long)this.t[2] * (long)g9_19;
		long f3g0 = (long)this.t[3] * (long)g[0];
		long f3g1_2 = (long)f3_2 * (long)g[1];
		long f3g2 = (long)this.t[3] * (long)g[2];
		long f3g3_2 = (long)f3_2 * (long)g[3];
		long f3g4 = (long)this.t[3] * (long)g[4];
		long f3g5_2 = (long)f3_2 * (long)g[5];
		long f3g6 = (long)this.t[3] * (long)g[6];
		long f3g7_38 = (long)f3_2 * (long)g7_19;
		long f3g8_19 = (long)this.t[3] * (long)g8_19;
		long f3g9_38 = (long)f3_2 * (long)g9_19;
		long f4g0 = (long)this.t[4] * (long)g[0];
		long f4g1 = (long)this.t[4] * (long)g[1];
		long f4g2 = (long)this.t[4] * (long)g[2];
		long f4g3 = (long)this.t[4] * (long)g[3];
		long f4g4 = (long)this.t[4] * (long)g[4];
		long f4g5 = (long)this.t[4] * (long)g[5];
		long f4g6_19 = (long)this.t[4] * (long)g6_19;
		long f4g7_19 = (long)this.t[4] * (long)g7_19;
		long f4g8_19 = (long)this.t[4] * (long)g8_19;
		long f4g9_19 = (long)this.t[4] * (long)g9_19;
		long f5g0 = (long)this.t[5] * (long)g[0];
		long f5g1_2 = (long)f5_2 * (long)g[1];
		long f5g2 = (long)this.t[5] * (long)g[2];
		long f5g3_2 = (long)f5_2 * (long)g[3];
		long f5g4 = (long)this.t[5] * (long)g[4];
		long f5g5_38 = (long)f5_2 * (long)g5_19;
		long f5g6_19 = (long)this.t[5] * (long)g6_19;
		long f5g7_38 = (long)f5_2 * (long)g7_19;
		long f5g8_19 = (long)this.t[5] * (long)g8_19;
		long f5g9_38 = (long)f5_2 * (long)g9_19;
		long f6g0 = (long)this.t[6] * (long)g[0];
		long f6g1 = (long)this.t[6] * (long)g[1];
		long f6g2 = (long)this.t[6] * (long)g[2];
		long f6g3 = (long)this.t[6] * (long)g[3];
		long f6g4_19 = (long)this.t[6] * (long)g4_19;
		long f6g5_19 = (long)this.t[6] * (long)g5_19;
		long f6g6_19 = (long)this.t[6] * (long)g6_19;
		long f6g7_19 = (long)this.t[6] * (long)g7_19;
		long f6g8_19 = (long)this.t[6] * (long)g8_19;
		long f6g9_19 = (long)this.t[6] * (long)g9_19;
		long f7g0 = (long)this.t[7] * (long)g[0];
		long f7g1_2 = (long)f7_2 * (long)g[1];
		long f7g2 = (long)this.t[7] * (long)g[2];
		long f7g3_38 = (long)f7_2 * (long)g3_19;
		long f7g4_19 = (long)this.t[7] * (long)g4_19;
		long f7g5_38 = (long)f7_2 * (long)g5_19;
		long f7g6_19 = (long)this.t[7] * (long)g6_19;
		long f7g7_38 = (long)f7_2 * (long)g7_19;
		long f7g8_19 = (long)this.t[7] * (long)g8_19;
		long f7g9_38 = (long)f7_2 * (long)g9_19;
		long f8g0 = (long)this.t[8] * (long)g[0];
		long f8g1 = (long)this.t[8] * (long)g[1];
		long f8g2_19 = (long)this.t[8] * (long)g2_19;
		long f8g3_19 = (long)this.t[8] * (long)g3_19;
		long f8g4_19 = (long)this.t[8] * (long)g4_19;
		long f8g5_19 = (long)this.t[8] * (long)g5_19;
		long f8g6_19 = (long)this.t[8] * (long)g6_19;
		long f8g7_19 = (long)this.t[8] * (long)g7_19;
		long f8g8_19 = (long)this.t[8] * (long)g8_19;
		long f8g9_19 = (long)this.t[8] * (long)g9_19;
		long f9g0 = (long)this.t[9] * (long)g[0];
		long f9g1_38 = (long)f9_2 * (long)g1_19;
		long f9g2_19 = (long)this.t[9] * (long)g2_19;
		long f9g3_38 = (long)f9_2 * (long)g3_19;
		long f9g4_19 = (long)this.t[9] * (long)g4_19;
		long f9g5_38 = (long)f9_2 * (long)g5_19;
		long f9g6_19 = (long)this.t[9] * (long)g6_19;
		long f9g7_38 = (long)f9_2 * (long)g7_19;
		long f9g8_19 = (long)this.t[9] * (long)g8_19;
		long f9g9_38 = (long)f9_2 * (long)g9_19;
		long h0 = f0g0 + f1g9_38 + f2g8_19 + f3g7_38 + f4g6_19 + f5g5_38 + f6g4_19 + f7g3_38 + f8g2_19 + f9g1_38;
		long h1 = f0g1 + f1g0 + f2g9_19 + f3g8_19 + f4g7_19 + f5g6_19 + f6g5_19 + f7g4_19 + f8g3_19 + f9g2_19;
		long h2 = f0g2 + f1g1_2 + f2g0 + f3g9_38 + f4g8_19 + f5g7_38 + f6g6_19 + f7g5_38 + f8g4_19 + f9g3_38;
		long h3 = f0g3 + f1g2 + f2g1 + f3g0 + f4g9_19 + f5g8_19 + f6g7_19 + f7g6_19 + f8g5_19 + f9g4_19;
		long h4 = f0g4 + f1g3_2 + f2g2 + f3g1_2 + f4g0 + f5g9_38 + f6g8_19 + f7g7_38 + f8g6_19 + f9g5_38;
		long h5 = f0g5 + f1g4 + f2g3 + f3g2 + f4g1 + f5g0 + f6g9_19 + f7g8_19 + f8g7_19 + f9g6_19;
		long h6 = f0g6 + f1g5_2 + f2g4 + f3g3_2 + f4g2 + f5g1_2 + f6g0 + f7g9_38 + f8g8_19 + f9g7_38;
		long h7 = f0g7 + f1g6 + f2g5 + f3g4 + f4g3 + f5g2 + f6g1 + f7g0 + f8g9_19 + f9g8_19;
		long h8 = f0g8 + f1g7_2 + f2g6 + f3g5_2 + f4g4 + f5g3_2 + f6g2 + f7g1_2 + f8g0 + f9g9_38;
		long h9 = f0g9 + f1g8 + f2g7 + f3g6 + f4g5 + f5g4 + f6g3 + f7g2 + f8g1 + f9g0;

		long carry0 = h0 + 0x2000000L >> 26;
		h0 -= carry0 << 26;
		long carry4 = h4 + 0x2000000L >> 26;
		h4 -= carry4 << 26;
		long carry1 = (h1 += carry0) + 0x1000000L >> 25;
		h1 -= carry1 << 25;
		long carry5 = (h5 += carry4) + 0x1000000L >> 25;
		h5 -= carry5 << 25;
		long carry2 = (h2 += carry1) + 0x2000000L >> 26;
		h2 -= carry2 << 26;
		long carry6 = (h6 += carry5) + 0x2000000L >> 26;
		h6 -= carry6 << 26;
		long carry3 = (h3 += carry2) + 0x1000000L >> 25;
		h3 -= carry3 << 25;
		long carry7 = (h7 += carry6) + 0x1000000L >> 25;
		h7 -= carry7 << 25;
		carry4 = (h4 += carry3) + 0x2000000L >> 26;
		h5 += carry4;
		h4 -= carry4 << 26;
		long carry8 = (h8 += carry7) + 0x2000000L >> 26;
		h8 -= carry8 << 26;
		long carry9 = (h9 += carry8) + 0x1000000L >> 25;
		h9 -= carry9 << 25;
		carry0 = (h0 += carry9 * 19L) + 0x2000000L >> 26;

		int[] h = mutable ? t : new int[10];
		h[0] = (int) (h0 - (carry0 << 26));
		h[1] = (int) (h1 + carry0);
		h[2] = (int) h2;
		h[3] = (int) h3;
		h[4] = (int) h4;
		h[5] = (int) h5;
		h[6] = (int) h6;
		h[7] = (int) h7;
		h[8] = (int) h8;
		h[9] = (int) h9;
		return mutable ? this : new EdInteger(h);
	}

	public EdInteger invert() {
		EdPoint.TmpNum tt = NUMS.get();

		int i;
		EdInteger t0 = tt.a.set(this).square();
		EdInteger t1 = tt.b.set(t0).square().square();
		t1 = tt.c.set(this).mul(t1);

		t0.mul(t1);

		EdInteger t2 = tt.b.set(t0).square();

		t1.mul(t2);
		t2.set(t1);
		for (i = 0; i < 5; ++i) t2.square();

		t1 = t2.mul(t1);
		t2 = tt.c.set(t1);
		for (i = 0; i < 10; ++i) t2.square();

		t2.mul(t1);
		EdInteger t3 = tt.d.set(t2);
		for (i = 0; i < 20; ++i) t3 = t3.square();

		t2 = t3.mul(t2);
		for (i = 0; i < 10; ++i) t2.square();

		t1 = t2.mul(t1);
		t2 = tt.c.set(t1);
		for (i = 0; i < 50; ++i) t2.square();

		t2 = t2.mul(t1);
		t3 = tt.b.set(t2);
		for (i = 0; i < 100; ++i) t3.square();

		t2 = t3.mul(t2);
		for (i = 0; i < 50; ++i) t2.square();

		t1 = t2.mul(t1);
		for (i = 0; i < 5; ++i) t1.square();

		EdInteger v = t1.mul(t0);
		return mutable ? set(v) : v;
	}

	public EdInteger square() {
		int f0 = this.t[0];
		int f1 = this.t[1];
		int f2 = this.t[2];
		int f3 = this.t[3];
		int f4 = this.t[4];
		int f5 = this.t[5];
		int f6 = this.t[6];
		int f7 = this.t[7];
		int f8 = this.t[8];
		int f9 = this.t[9];
		int f0_2 = 2 * f0;
		int f1_2 = 2 * f1;
		int f2_2 = 2 * f2;
		int f3_2 = 2 * f3;
		int f4_2 = 2 * f4;
		int f5_2 = 2 * f5;
		int f6_2 = 2 * f6;
		int f7_2 = 2 * f7;
		int f5_38 = 38 * f5;
		int f6_19 = 19 * f6;
		int f7_38 = 38 * f7;
		int f8_19 = 19 * f8;
		int f9_38 = 38 * f9;
		long f0f0 = (long)f0 * (long)f0;
		long f0f1_2 = (long)f0_2 * (long)f1;
		long f0f2_2 = (long)f0_2 * (long)f2;
		long f0f3_2 = (long)f0_2 * (long)f3;
		long f0f4_2 = (long)f0_2 * (long)f4;
		long f0f5_2 = (long)f0_2 * (long)f5;
		long f0f6_2 = (long)f0_2 * (long)f6;
		long f0f7_2 = (long)f0_2 * (long)f7;
		long f0f8_2 = (long)f0_2 * (long)f8;
		long f0f9_2 = (long)f0_2 * (long)f9;
		long f1f1_2 = (long)f1_2 * (long)f1;
		long f1f2_2 = (long)f1_2 * (long)f2;
		long f1f3_4 = (long)f1_2 * (long)f3_2;
		long f1f4_2 = (long)f1_2 * (long)f4;
		long f1f5_4 = (long)f1_2 * (long)f5_2;
		long f1f6_2 = (long)f1_2 * (long)f6;
		long f1f7_4 = (long)f1_2 * (long)f7_2;
		long f1f8_2 = (long)f1_2 * (long)f8;
		long f1f9_76 = (long)f1_2 * (long)f9_38;
		long f2f2 = (long)f2 * (long)f2;
		long f2f3_2 = (long)f2_2 * (long)f3;
		long f2f4_2 = (long)f2_2 * (long)f4;
		long f2f5_2 = (long)f2_2 * (long)f5;
		long f2f6_2 = (long)f2_2 * (long)f6;
		long f2f7_2 = (long)f2_2 * (long)f7;
		long f2f8_38 = (long)f2_2 * (long)f8_19;
		long f2f9_38 = (long)f2 * (long)f9_38;
		long f3f3_2 = (long)f3_2 * (long)f3;
		long f3f4_2 = (long)f3_2 * (long)f4;
		long f3f5_4 = (long)f3_2 * (long)f5_2;
		long f3f6_2 = (long)f3_2 * (long)f6;
		long f3f7_76 = (long)f3_2 * (long)f7_38;
		long f3f8_38 = (long)f3_2 * (long)f8_19;
		long f3f9_76 = (long)f3_2 * (long)f9_38;
		long f4f4 = (long)f4 * (long)f4;
		long f4f5_2 = (long)f4_2 * (long)f5;
		long f4f6_38 = (long)f4_2 * (long)f6_19;
		long f4f7_38 = (long)f4 * (long)f7_38;
		long f4f8_38 = (long)f4_2 * (long)f8_19;
		long f4f9_38 = (long)f4 * (long)f9_38;
		long f5f5_38 = (long)f5 * (long)f5_38;
		long f5f6_38 = (long)f5_2 * (long)f6_19;
		long f5f7_76 = (long)f5_2 * (long)f7_38;
		long f5f8_38 = (long)f5_2 * (long)f8_19;
		long f5f9_76 = (long)f5_2 * (long)f9_38;
		long f6f6_19 = (long)f6 * (long)f6_19;
		long f6f7_38 = (long)f6 * (long)f7_38;
		long f6f8_38 = (long)f6_2 * (long)f8_19;
		long f6f9_38 = (long)f6 * (long)f9_38;
		long f7f7_38 = (long)f7 * (long)f7_38;
		long f7f8_38 = (long)f7_2 * (long)f8_19;
		long f7f9_76 = (long)f7_2 * (long)f9_38;
		long f8f8_19 = (long)f8 * (long)f8_19;
		long f8f9_38 = (long)f8 * (long)f9_38;
		long f9f9_38 = (long)f9 * (long)f9_38;
		long h0 = f0f0 + f1f9_76 + f2f8_38 + f3f7_76 + f4f6_38 + f5f5_38;
		long h1 = f0f1_2 + f2f9_38 + f3f8_38 + f4f7_38 + f5f6_38;
		long h2 = f0f2_2 + f1f1_2 + f3f9_76 + f4f8_38 + f5f7_76 + f6f6_19;
		long h3 = f0f3_2 + f1f2_2 + f4f9_38 + f5f8_38 + f6f7_38;
		long h4 = f0f4_2 + f1f3_4 + f2f2 + f5f9_76 + f6f8_38 + f7f7_38;
		long h5 = f0f5_2 + f1f4_2 + f2f3_2 + f6f9_38 + f7f8_38;
		long h6 = f0f6_2 + f1f5_4 + f2f4_2 + f3f3_2 + f7f9_76 + f8f8_19;
		long h7 = f0f7_2 + f1f6_2 + f2f5_2 + f3f4_2 + f8f9_38;
		long h8 = f0f8_2 + f1f7_4 + f2f6_2 + f3f5_4 + f4f4 + f9f9_38;
		long h9 = f0f9_2 + f1f8_2 + f2f7_2 + f3f6_2 + f4f5_2;
		long carry0 = h0 + 0x2000000L >> 26;
		h0 -= carry0 << 26;
		long carry4 = h4 + 0x2000000L >> 26;
		h4 -= carry4 << 26;
		long carry1 = (h1 += carry0) + 0x1000000L >> 25;
		h1 -= carry1 << 25;
		long carry5 = (h5 += carry4) + 0x1000000L >> 25;
		h5 -= carry5 << 25;
		long carry2 = (h2 += carry1) + 0x2000000L >> 26;
		h2 -= carry2 << 26;
		long carry6 = (h6 += carry5) + 0x2000000L >> 26;
		h6 -= carry6 << 26;
		long carry3 = (h3 += carry2) + 0x1000000L >> 25;
		h3 -= carry3 << 25;
		long carry7 = (h7 += carry6) + 0x1000000L >> 25;
		carry4 = (h4 += carry3) + 0x2000000L >> 26;
		long carry8 = (h8 += carry7) + 0x2000000L >> 26;
		long carry9 = (h9 += carry8) + 0x1000000L >> 25;
		carry0 = (h0 += carry9 * 19L) + 0x2000000L >> 26;

		int[] h = mutable ? t : new int[10];
		h[0] = (int) (h0 - (carry0 << 26));
		h[1] = (int) (h1 + carry0);
		h[2] = (int) h2;
		h[3] = (int) h3;
		h[4] = (int) (h4 - (carry4 << 26));
		h[5] = (int) (h5 + carry4);
		h[6] = (int) h6;
		h[7] = (int) (h7 - (carry7 << 25));
		h[8] = (int) (h8 - (carry8 << 26));
		h[9] = (int) (h9 - (carry9 << 25));
		return mutable ? this : new EdInteger(h);
	}
	public EdInteger squareAndDouble() {
		int f0 = this.t[0];
		int f1 = this.t[1];
		int f2 = this.t[2];
		int f3 = this.t[3];
		int f4 = this.t[4];
		int f5 = this.t[5];
		int f6 = this.t[6];
		int f7 = this.t[7];
		int f8 = this.t[8];
		int f9 = this.t[9];
		int f0_2 = 2 * f0;
		int f1_2 = 2 * f1;
		int f2_2 = 2 * f2;
		int f3_2 = 2 * f3;
		int f4_2 = 2 * f4;
		int f5_2 = 2 * f5;
		int f6_2 = 2 * f6;
		int f7_2 = 2 * f7;
		int f5_38 = 38 * f5;
		int f6_19 = 19 * f6;
		int f7_38 = 38 * f7;
		int f8_19 = 19 * f8;
		int f9_38 = 38 * f9;
		long f0f0 = (long)f0 * (long)f0;
		long f0f1_2 = (long)f0_2 * (long)f1;
		long f0f2_2 = (long)f0_2 * (long)f2;
		long f0f3_2 = (long)f0_2 * (long)f3;
		long f0f4_2 = (long)f0_2 * (long)f4;
		long f0f5_2 = (long)f0_2 * (long)f5;
		long f0f6_2 = (long)f0_2 * (long)f6;
		long f0f7_2 = (long)f0_2 * (long)f7;
		long f0f8_2 = (long)f0_2 * (long)f8;
		long f0f9_2 = (long)f0_2 * (long)f9;
		long f1f1_2 = (long)f1_2 * (long)f1;
		long f1f2_2 = (long)f1_2 * (long)f2;
		long f1f3_4 = (long)f1_2 * (long)f3_2;
		long f1f4_2 = (long)f1_2 * (long)f4;
		long f1f5_4 = (long)f1_2 * (long)f5_2;
		long f1f6_2 = (long)f1_2 * (long)f6;
		long f1f7_4 = (long)f1_2 * (long)f7_2;
		long f1f8_2 = (long)f1_2 * (long)f8;
		long f1f9_76 = (long)f1_2 * (long)f9_38;
		long f2f2 = (long)f2 * (long)f2;
		long f2f3_2 = (long)f2_2 * (long)f3;
		long f2f4_2 = (long)f2_2 * (long)f4;
		long f2f5_2 = (long)f2_2 * (long)f5;
		long f2f6_2 = (long)f2_2 * (long)f6;
		long f2f7_2 = (long)f2_2 * (long)f7;
		long f2f8_38 = (long)f2_2 * (long)f8_19;
		long f2f9_38 = (long)f2 * (long)f9_38;
		long f3f3_2 = (long)f3_2 * (long)f3;
		long f3f4_2 = (long)f3_2 * (long)f4;
		long f3f5_4 = (long)f3_2 * (long)f5_2;
		long f3f6_2 = (long)f3_2 * (long)f6;
		long f3f7_76 = (long)f3_2 * (long)f7_38;
		long f3f8_38 = (long)f3_2 * (long)f8_19;
		long f3f9_76 = (long)f3_2 * (long)f9_38;
		long f4f4 = (long)f4 * (long)f4;
		long f4f5_2 = (long)f4_2 * (long)f5;
		long f4f6_38 = (long)f4_2 * (long)f6_19;
		long f4f7_38 = (long)f4 * (long)f7_38;
		long f4f8_38 = (long)f4_2 * (long)f8_19;
		long f4f9_38 = (long)f4 * (long)f9_38;
		long f5f5_38 = (long)f5 * (long)f5_38;
		long f5f6_38 = (long)f5_2 * (long)f6_19;
		long f5f7_76 = (long)f5_2 * (long)f7_38;
		long f5f8_38 = (long)f5_2 * (long)f8_19;
		long f5f9_76 = (long)f5_2 * (long)f9_38;
		long f6f6_19 = (long)f6 * (long)f6_19;
		long f6f7_38 = (long)f6 * (long)f7_38;
		long f6f8_38 = (long)f6_2 * (long)f8_19;
		long f6f9_38 = (long)f6 * (long)f9_38;
		long f7f7_38 = (long)f7 * (long)f7_38;
		long f7f8_38 = (long)f7_2 * (long)f8_19;
		long f7f9_76 = (long)f7_2 * (long)f9_38;
		long f8f8_19 = (long)f8 * (long)f8_19;
		long f8f9_38 = (long)f8 * (long)f9_38;
		long f9f9_38 = (long)f9 * (long)f9_38;
		long h0 = f0f0 + f1f9_76 + f2f8_38 + f3f7_76 + f4f6_38 + f5f5_38;
		long h1 = f0f1_2 + f2f9_38 + f3f8_38 + f4f7_38 + f5f6_38;
		long h2 = f0f2_2 + f1f1_2 + f3f9_76 + f4f8_38 + f5f7_76 + f6f6_19;
		long h3 = f0f3_2 + f1f2_2 + f4f9_38 + f5f8_38 + f6f7_38;
		long h4 = f0f4_2 + f1f3_4 + f2f2 + f5f9_76 + f6f8_38 + f7f7_38;
		long h5 = f0f5_2 + f1f4_2 + f2f3_2 + f6f9_38 + f7f8_38;
		long h6 = f0f6_2 + f1f5_4 + f2f4_2 + f3f3_2 + f7f9_76 + f8f8_19;
		long h7 = f0f7_2 + f1f6_2 + f2f5_2 + f3f4_2 + f8f9_38;
		long h8 = f0f8_2 + f1f7_4 + f2f6_2 + f3f5_4 + f4f4 + f9f9_38;
		long h9 = f0f9_2 + f1f8_2 + f2f7_2 + f3f6_2 + f4f5_2;
		h0 += h0;
		h1 += h1;
		h2 += h2;
		h3 += h3;
		h4 += h4;
		h5 += h5;
		h6 += h6;
		h7 += h7;
		h8 += h8;
		h9 += h9;
		long carry0 = h0 + 0x2000000L >> 26;
		h0 -= carry0 << 26;
		long carry4 = h4 + 0x2000000L >> 26;
		h4 -= carry4 << 26;
		long carry1 = (h1 += carry0) + 0x1000000L >> 25;
		h1 -= carry1 << 25;
		long carry5 = (h5 += carry4) + 0x1000000L >> 25;
		h5 -= carry5 << 25;
		long carry2 = (h2 += carry1) + 0x2000000L >> 26;
		h2 -= carry2 << 26;
		long carry6 = (h6 += carry5) + 0x2000000L >> 26;
		h6 -= carry6 << 26;
		long carry3 = (h3 += carry2) + 0x1000000L >> 25;
		h3 -= carry3 << 25;
		long carry7 = (h7 += carry6) + 0x1000000L >> 25;
		carry4 = (h4 += carry3) + 0x2000000L >> 26;
		long carry8 = (h8 += carry7) + 0x2000000L >> 26;
		long carry9 = (h9 += carry8) + 0x1000000L >> 25;
		carry0 = (h0 += carry9 * 19L) + 0x2000000L >> 26;

		int[] h = mutable ? t : new int[10];
		h[0] = (int) (h0 -= carry0 << 26);
		h[1] = (int) (h1 + carry0);
		h[2] = (int) h2;
		h[3] = (int) h3;
		h[4] = (int) (h4 -= carry4 << 26);
		h[5] = (int) (h5 + carry4);
		h[6] = (int) h6;
		h[7] = (int) (h7 -= carry7 << 25);
		h[8] = (int) (h8 -= carry8 << 26);
		h[9] = (int) (h9 -= carry9 << 25);
		return mutable ? this : new EdInteger(h);
	}

	public EdInteger pow22523() {
		EdPoint.TmpNum tt = NUMS.get();

		int i;
		EdInteger t0 = tt.a.set(this).square();
		EdInteger t1 = tt.b.set(t0).square().square();
		t1 = tt.c.set(this).mul(t1);

		t0.mul(t1).square();
		t0 = t1.mul(t0);

		t1 = tt.a.set(t0);
		for (i = 0; i < 5; ++i) t1.square();

		t0 = t1.mul(t0);
		t1 = tt.c.set(t0);
		for (i = 0; i < 10; ++i) t1.square();

		t1.mul(t0);
		EdInteger t2 = tt.b.set(t1);
		for (i = 0; i < 20; ++i) t2.square();

		t1 = t2.mul(t1);
		for (i = 0; i < 10; ++i) t1.square();

		t0 = t1.mul(t0);
		t1 = tt.a.set(t0); // can be a or c
		for (i = 0; i < 50; ++i) t1 = t1.square();

		t1.mul(t0);
		t2 = tt.c.set(t1);
		for (i = 0; i < 100; ++i) t2.square();

		t1 = t2.mul(t1);
		for (i = 0; i < 50; ++i) t1.square();

		t1.mul(t0).square().square();
		return mul(t1);
	}

	public EdInteger cmov(EdInteger val, int b) {
		b = -b;
		int[] h = mutable ? t : new int[10];
		for (int i = 0; i < 10; i++) {
			int x = t[i];
			h[i] = x ^ ((x ^ val.t[i]) & b);
		}
		return mutable ? this : new EdInteger(h);
	}

	public EdInteger set(EdInteger o) {
		if (!mutable) throw new AssertionError();
		System.arraycopy(o.t, 0, t, 0, 10);
		return this;
	}
	public EdInteger mutable() {
		EdInteger integer = new EdInteger(t.clone());
		integer.mutable = true;
		return integer;
	}
	public EdInteger lock() {
		mutable = false;
		return this;
	}

	public int hashCode() { return Arrays.hashCode(t); }

	public boolean equals(Object obj) {
		if (!(obj instanceof EdInteger)) return false;
		return Arrays.equals(((EdInteger) obj).t, t);
	}

	public String toString() {
		return "[EdElement="+TextUtil.bytes2hex(toByteArray())+"]";
	}
}

