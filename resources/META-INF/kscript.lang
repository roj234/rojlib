#

default_prefers_constant=默认值最好是一个常量, 这样有助于别人理解

# Common
type.literal=标识符(identifier)
type.expr=表达式(expression)

unexpected=此时不应有 '%1'
unexpected_2=未预料的 '%1', 期待 '%2'

# todo 分类和重新排序和精简...
statement.unreachable=无法访问的语句
statement.empty=空语句
statement.empty.if=空的if条件
statement.empty.switch=空的switch条件

switch.case.empty=空的case
switch.case.not_constant=case不是常量
switch.case.duplicate=重复的case '%1'
switch.empty=switch没有case
switch.constant=switch常量

var.exist=变量重复
var.redefine=重定义常量
var.initialize_const=未初始化常量
var.write_const=写入常量

not_condition=无条件的for

nob=标识符/左圆括号 '('

unused.let=未使用的let %1
unused.var=未使用的var %1

rest.unable_default=Rest参数不能有默认值
rest.last_formal_parameter=Rest参数必须是最后一个形参

# Tokenizer
lexer.number.floatLarge=[Num]浮点数过大
lexer.number.floatSmall=[Num]浮点数过小
lexer.number.overflow=[Num]整数太大
lexer.number.notNumber=[Num]非法的字符'%1'
lexer.number.eof=[Num]在解析数字时遇到了文件尾
lexer.number.exceptBlank=[Num]期待[空白]
lexer.number.exceptDec=[Num]期待[阿拉伯数字]
lexer.number.noExponent=[Num]数字在指数后被截断
lexer.number.formatError=[Num]浮点文字的格式错误

# CompileUnit
empty_type=非法的类型(on %1)
array_dimension_overflow=遇到了超过255维的多维数组
unexpected_primitive=此处不允许使用基本类型


type.except.afterAsk=大于号、逗号、extends或super
type.except.afterLss=大于号或逗号
type.error.partialGenericSub=[Type]动态泛型组合格式不正确, 缺少%1的参数
type.error.staticGenericSub=[Type]在动态泛型组合格式%1中引用静态类%2
type.error.primitiveGeneric=[Type]此处不允许使用基本类型
type.error.illegalAnyType=[Type]非法的类型开始

# BlockParser
block.error.noExpression=[Block]非法的表达式开始

block.goto.error.outsideLoop=[Goto]在switch或循环外%1
block.goto.error.noSuchLabel=[Goto]未定义的标签: %1

block.return.error.outsideMethod=[Return]方法外的返回
block.return.error.exceptVoid=[Return]意外的返回值
block.return.error.exceptExpr=[Return]缺少返回值

block.try.error.duplicateCatch=[Try]在AnyCatch后不能再有catch
block.try.error.notException=[Try]%1不是异常
block.try.error.generic=[Try]不能捕获泛型异常%1
block.try.error.captured=[Try]异常%1已被%2捕获
block.try.error.noHandler=[Try]孤立的try
block.try.error.noAutoCloseable=[Try] try-with-resources 不适用 (%1无法转换为java.lang.AutoCloseable)
block.try.warn.tooManyCopies=[Try]finally代码块（%1字节）被复制了%2次，用"sr-finally"替换finally以减小文件体积

block.var.error.final=[Var]Final变量未赋初值

# BlockParser Excepting Types
block.except.tryOrAuto=(或{
block.except.name=变量名称(标识符)
block.except.labelOrSemi=标签或;

# 表达式Parse阶段
not_statement=不是语句
not_supported=不支持的操作('%1')

expr.stackOverflow=[StackOverflow]表达式过于复杂
expr.cast.lambda=[Lambda]需要->
expr.namedCall.noExpr=[NamedCall]参数不是语句
expr.easyMap.noKey=[EasyMap]键不是语句
expr.easyMap.noValue=[EasyMap]值不是语句
expr.newArray.generic=[NewArray]创建泛型数组
expr.newArray.unInit=[NewArray]期待数组初始化
expr.invoke.paramName=[Invoke]参数名称%1重复
expr.symbol.refCheck=[Symbol].class的parent不是空:'%1'
expr.unary.notVariable=[Unary]'%1'要求变量类型
expr.unary.noOperand=[Unary]'%1'缺少操作数
expr.assign.left=[Assign]无效的左值
expr.assign.right=[Assign]无效的右值
expr.trinary.noMiddle=[Trinary]无效的中值
expr.trinary.noRight=[Trinary]无效的右值

# 表达式Resolve阶段
arrayDef.note.autoDownCastNumber=[ArrayDef]自动将超过范围的数字降级
arrayGet.error.notArray=[ArrayGet] %1 不是数组
arrayGet.warn.constant=[ArrayGet]值总是常量
arrayGet.note.uselessCreation=[ArrayGet]建议将该数组转换为static final字段
assign.incompatible.redundantCast=[Assign][Incompatible]Lavac支持在赋值时自动降级
assign.error.final=[Assign]无法为最终变量%1分配值
binary.error.void=[Binary]void不是有效的值
binary.error.notApplicable=[Binary]%1和%2不是操作符%3的有效参数
binary.warn.always=[Binary]值总是常量
cast.warn.redundant=[Cast]出现冗余的到 %1 的转换
chained.warn.constant_expr=[Chained]在逗号分隔中的常量表达式
dotGet.error.illegalArrayLength=[DotGet]无法在?.表达式中访问数组长度
dotGet.incompatible.plural="[DotGet]对于%1找不到合适的字段\n%2"
symbol.error.arrayBrOutsideClassRef=[Symbol]数组索引不能为<空>
symbol.error.derefPrimitiveField=[Symbol]不能取消引用 %1
symbol.error.expression=[Symbol]期待表达式
symbol.error.noSuchClass=[Symbol]找不到 %1 的类
symbol.error.noSuchSymbol="[Symbol]找不到符号\n符号: %1 %2\n位置: %3"
symbol.error.generic.paramCount=[Symbol] %1 的类型变量数目错误; 找到%2; 需要%3
symbol.error.generic.paramCount.0=[Symbol]类型 %1 不带有参数
symbol.warn.generic.rawTypes=[Symbol]找到原始类型: %1
symbol.error.accessDenied.type=[Symbol] %1 的修饰符是%2; 无法在 %3 访问
symbol.error.accessDenied.symbol=[Symbol] %1 的修饰符是%2; 无法在 %3 访问
symbol.error.accessDenied.package=[Symbol]%1在 %2 中不是公共的; 无法从外部程序包中对其进行访问
symbol.error.nonStatic.type=[Symbol]'%1'不是静态类，无法在静态上下文中访问
symbol.error.nonStatic.symbol=[Symbol]无法从静态上下文中引用非静态 %3 '%1.%2'
symbol.error.field.writeAfterWrite=[Symbol]修改final字段 '%1.%2'
symbol.error.field.writeFinal=[Symbol]修改final字段 '%1.%2'
symbol.error.field.readBeforeWrite=[Symbol]非法前向引用 '%1.%2'
symbol.warn.static_on_half=[Symbol]静态%3应由类型名称'%1.%2'而不是表达式限定
encloseRef.incompatible.nds=[EncloseRef][Incompatible] %2 不是 %1 的直接超类或超接口
encloseRef.error.nds=[EncloseRef] %2 不是 %1 的超类或超接口
instanceof.error.unsafeCast=[InstanceOf]%1 无法安全地转换为 %2
instanceOf.error.primitive=[InstanceOf]不能取消引用 %1
instanceOf.warn.always=[InstanceOf]对 %1 的检测总是常量
invoke.error.constructor=[Invoke]对 %1 的调用必须是构造器中的第一个语句
invoke.error.instantiationAbstract=[Invoke] %1 是抽象的; 无法实例化
invoke.compatible.plural="[Invoke]对 %1 的引用不明确\n%2"
invoke.incompatible.single="[Invoke]无法将类 %1 中的方法 %2 应用到给定类型\n%3"
invoke.incompatible.plural="[Invoke]对于%1找不到合适的方法\n%2"

symbol.type=类
symbol.field=字段
invoke.method=方法

invoke.except=需要:
invoke.found=找到:
invoke.reason=原因:
invoke.no_param=没有参数
invoke.matches=都匹配
invoke.notApplicable=不适用:
and=和
trinary.warn.always=[Trinary]值总是常量
unary.error.notApplicable=[Unary]运算符'%1'不适用于'%2'
unary.warn.wrapper=[Unary]对包装类型%1的%2操作
unary.error.void=[Unary]空类型
unary.error.final=[Unary]无法为最终变量%1分配值
switch.warn.always=[Switch]值总是常量
switch.error.notSwitchable=[Switch]使用@Switchable注解让这个类可以被switch

# 类型转换 (注意，当修改TypeCast中对应数值需要同步这里)
typeCast.warn.rawTypes=[TypeCast]对原始类型的转换: %1 => %2
typeCast.error.-1=%1无法隐式转换为%2 # char
typeCast.error.-2=基本类型%1无法转换为%2
typeCast.error.-3=%1无法转换为%2
typeCast.error.-4=%1无法转换为基本类型%2
typeCast.error.-5=基本类型%1无法转换为%2
typeCast.error.-6=实际参数列表和形式参数列表长度不同
typeCast.error.-7=找不到符号，无法处理%1与%2的转换关系
typeCast.error.-8=%1不可能转换为%2